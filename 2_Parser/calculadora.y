/* area de definicoes */
%{
	#include <stdio.h>
	#include <stdlib.h>
     #include "calculadora.h"
     extern FILE* yyin;
     extern int yylex();
%}

%union
{
	int Valor_Inteiro;
	double Valor_Double;
	char *Valor_String;
	char Nome[1024];
}

%token<Nome>	            ID
%token<Valor_Inteiro>		NUM_INT VERDADEIRO FALSO
%token<Valor_Double>	    NUM_DOUBLE PI
%token<Valor_String>		STRING

%token				ALGORITMO INICIO VAR FIMALGORITMO INT REAL CARACTERE LOGICO PONTO_PONTO EOL PASSO
%token				ADD SUB MUL DIV DIVINT MOD EXP ATRIBUICAO IGUAL MENOR MAIOR MENOR_IGUAL MAIOR_IGUAL DIFERENTE NAO OU E XOU
%token				SE ENTAO SENAO FIMSE ESCOLHA CASO OUTROCASO FIMESCOLHA FUNC FIMFUNC PROC FIMPROC RETORNE 
%token				PARENTESES_ESQ PARENTESES_DIR VIRGULA VETOR COCHETES_ESQ COCHETES_DIR DOIS_PONTO PARA DE ATE FACA FIMPARA
%token				ENQUANTO FIMENQUANTO REPITA FIMREPITA INTERROMPA
%token				ALEATORIO LEIA ESCREVA MAIUSCULO MINUSCULO NUMPCARAC

%token FIM       


%start PROGRAMA

%%

/* area regras gramaticais */

PROGRAMA : ALGORITMO STRING EOL PROG_DECLA INICIO EOL TUDO FIMALGORITMO
	;

PROG_DECLA : 
    | VAR EOL DECLARACAO_VAR FUNCOES
	| VAR EOL DECLARACAO_VAR
	| FUNCOES
	;

DECLARACAO_VAR : 
    |DECLARACAO_VAR IDENTIFICACAO_VAR DOIS_PONTO TIPO_VAR EOL
	| IDENTIFICACAO_VAR DOIS_PONTO TIPO_VAR EOL
	;	

IDENTIFICACAO_VAR : ID VIRGULA IDENTIFICACAO_VAR
	| ID
	;

TIPO_VAR : VETOR COCHETES_ESQ NUM_INT PONTO_PONTO NUM_INT COCHETES_DIR DE TIPO_VAR
    | INT
	| REAL
	| CARACTERE
	| LOGICO
	;	

FUNCOES : FUNC ID PARAMETROS DOIS_PONTO TIPO_VAR EOL TUDO_COMP FIMFUNC EOL
	| PROC ID PARAMETROS EOL TUDO_COMP FIMPROC EOL
	;

PARAMETROS : 
	| PARENTESES_ESQ PARAMETROS_FUNC PARENTESES_DIR
	;

PARAMETROS_FUNC : 
	| IDENTIFICACAO_VAR DOIS_PONTO TIPO_VAR VIRGULA IDENTIFICACAO_VAR DOIS_PONTO TIPO_VAR
	| IDENTIFICACAO_VAR DOIS_PONTO TIPO_VAR
	;

TUDO_COMP : PROG_DECLA INICIO EOL TUDO
	| INICIO EOL TUDO
	;

CHAMADA_FUNC : ID PARENTESES_ESQ CHAMADA_FUNC_2 PARENTESES_DIR
	;

CHAMADA_FUNC_2 : BASE_EXPRESSOES VIRGULA CHAMADA_FUNC_2
	| BASE_EXPRESSOES
	; 
     
OPR_LOOPS : OPR_LOOPS_PARA
	| ENQUANTO BASE_EXPRESSOES FACA EOL TUDO FIMENQUANTO
	| REPITA EOL TUDO ATE BASE_EXPRESSOES
	;

OPR_LOOPS_PARA : PARA ID DE BASE_EXPRESSOES ATE BASE_EXPRESSOES FACA EOL TUDO FIMPARA
	| PARA ID DE BASE_EXPRESSOES ATE BASE_EXPRESSOES PASSO BASE_EXPRESSOES FACA EOL TUDO FIMPARA
	;

COND_SE : SE BASE_EXPRESSOES ENTAO EOL TUDO COND_SENAO FIMSE
	;

COND_SENAO :
	| SENAO EOL TUDO
	;

COND_ESCOLHA : ESCOLHA BASE_EXPRESSOES EOL COND_ESCOLHA_CASO FIMESCOLHA
	;

COND_ESCOLHA_CASO : CASO COND_ESCOLHA_CASO_MAISITENS EOL TUDO
	| OUTROCASO EOL TUDO
	;

COND_ESCOLHA_CASO_MAISITENS : BASE_EXPRESSOES VIRGULA COND_ESCOLHA_CASO_MAISITENS
	| BASE_EXPRESSOES
	;

RETORNO : RETORNE BASE_EXPRESSOES
	| RETORNE
	;

TUDO :
	| TUDO_FUNCOES EOL TUDO_FUNCOES
	| TUDO_FUNCOES EOL
	;

TUDO_FUNCOES :
	| OPR_LOOPS
	| COND_SE
	| COND_ESCOLHA	
	| CHAMADA_FUNC
	| VAR_ATRIBUICAO
	| RETORNO
	| INTERROMPA
	| FUNCOES_IO
	;

VAR_ATRIBUICAO : ID ATRIBUICAO BASE_EXPRESSOES
	;

EXPRESSOES_MATEMATICAS : TIPOS_VARIAVEIS
	| EXPRESSOES_MATEMATICAS ADD TIPOS_VARIAVEIS
	| EXPRESSOES_MATEMATICAS SUB TIPOS_VARIAVEIS
	| EXPRESSOES_MATEMATICAS MUL TIPOS_VARIAVEIS
	| EXPRESSOES_MATEMATICAS DIV TIPOS_VARIAVEIS
	;

FUNCOES_IO : ALEATORIO PARENTESES_ESQ TODAS_EXPRESSOES VIRGULA TODAS_EXPRESSOES PARENTESES_DIR
	| LEIA PARENTESES_ESQ TODAS_EXPRESSOES PARENTESES_DIR
	| ESCREVA PARENTESES_ESQ TODAS_EXPRESSOES VIRGULA TODAS_EXPRESSOES PARENTESES_DIR
	;

TODAS_EXPRESSOES : 
	| EXPRESSOES_MATEMATICAS
	| FUNCOES_IO
	| ADD EXPRESSOES_MATEMATICAS
	| SUB EXPRESSOES_MATEMATICAS
	;
EXPRESSOES_COMP : TODAS_EXPRESSOES
	| EXPRESSOES_COMP IGUAL TODAS_EXPRESSOES
	| EXPRESSOES_COMP MENOR TODAS_EXPRESSOES
	| EXPRESSOES_COMP MAIOR TODAS_EXPRESSOES
	| EXPRESSOES_COMP MENOR_IGUAL TODAS_EXPRESSOES
	| EXPRESSOES_COMP MAIOR_IGUAL TODAS_EXPRESSOES
	| EXPRESSOES_COMP DIFERENTE TODAS_EXPRESSOES
	;

BASE_EXPRESSOES : PARENTESES_ESQ BASE_EXPRESSOES PARENTESES_DIR
	| EXPRESSOES_COMP
	| BASE_EXPRESSOES E EXPRESSOES_COMP
	| BASE_EXPRESSOES OU EXPRESSOES_COMP
	| BASE_EXPRESSOES XOU EXPRESSOES_COMP
	| NAO BASE_EXPRESSOES
	;

TIPOS_VARIAVEIS : NUM_INT
	| NUM_DOUBLE
	| VERDADEIRO
	| FALSO
	| STRING
	| ID
    | CHAMADA_FUNC
	;


%%

/* area de funcoes auxiliares */

int main( int argc, char *argv[]) {
  printf("> ");
  FILE *arg = fopen(argv[1], "r");
  yyin = arg;
  int r = yyparse();
  printf("Calculadora finalizada com sucesso!\n");
  return r;
}
